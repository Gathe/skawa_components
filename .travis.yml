language: dart

dart:
# - dev currently the dartfmt failing on dev
 - stable

addons:
  chrome: stable
#before_install:
#  # Add a local `bin` folder and add it to the PATH.
#  - mkdir -p bin
#  - export PATH="$PATH:$PWD/bin"
#
#  # Start UI (required for Dartium).
#  - export DISPLAY=:99.0
#  - sh -e /etc/init.d/xvfb start &
#  - sleep 3
#
#  # Download the latest stable release of Dartium, extract it, and add a symlink to bin.
#  - wget http://gsdview.appspot.com/dart-archive/channels/stable/release/latest/dartium/dartium-linux-x64-release.zip
#  - unzip dartium-linux-x64-release.zip
#  - rm dartium-linux-x64-release.zip
#  - PATH_TO_DARTIUM=`pwd`/`echo dartium-linux-*`/chrome
#  - ln -sv "$PATH_TO_DARTIUM" "bin/dartium"
#
#  # Sanity check for terminal output.
#  - echo `which dartium`

before_install:
#  - export DISPLAY=:99.0
#  - sh -e /etc/init.d/xvfb start
#  - "t=0; until (xdpyinfo -display :99 &> /dev/null || test $t -gt 10); do sleep 1; let t=$t+1; done"
#  - ln -sv chrome 'google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &'
  - chmod ugo+x tool/travis.sh

# Only building master means that we don't run two builds for each pull request.
branches:
  only: [master]

cache:
 directories:
   - $HOME/.pub-cache

stages:
#  - presubmit
  - test

jobs:
  include:
#    - stage: presubmit
#      env: PKG="skawa_material_components"
#      script: ./tool/travis.sh presubmit
    - stage: test
      env: PKG="skawa_material_components"
      script: ./tool/travis.sh test

#    - stage: presubmit
#      env: PKG="skawa_components"
#      script: ./tool/travis.sh presubmit
#    - stage: test
#      env: PKG="skawa_components"
#      script: ./tool/travis.sh test
